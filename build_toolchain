#!/usr/bin/env bash
set -e

NPROC=$(($(nproc) + 1))

_binu_ver=2.37
_gcc_ver=6.3.0
_mpfrver=4.1.0
_mpcver=1.2.1
_gmpver=6.2.1
_newlib_ver=4.1.0

TARGET=m68k-elf
TARGET_CPU=m68000

BINUTILS=binutils-${_binu_ver}
GCC=gcc-${_gcc_ver}
MPFR=mpfr-${_mpfrver}
MPC=mpc-${_mpcver}
GMP=gmp-${_gmpver}
NEWLIB=newlib-${_newlib_ver}

BASEDIR=$PWD
PKGDIR="$BASEDIR/pkg"
SRCDIR="$BASEDIR/src"
BUILDDIR="$BASEDIR/build"
INSTALLDIR="$BASEDIR/install"
STAGINGDIR="$BASEDIR/staging"

SOURCES="http://ftp.gnu.org/gnu/binutils/${BINUTILS}.tar.xz \
	http://ftp.gnu.org/gnu/gcc/${GCC}/${GCC}.tar.bz2 \
	http://ftp.gnu.org/gnu/mpfr/${MPFR}.tar.xz \
	http://ftp.gnu.org/gnu/mpc/${MPC}.tar.gz \
	http://ftp.gnu.org/gnu/gmp/${GMP}.tar.xz \
	ftp://sourceware.org/pub/newlib/${NEWLIB}.tar.gz"

mkdir -p "$PKGDIR"
mkdir -p "$SRCDIR"
mkdir -p "$BUILDDIR"
mkdir -p "$INSTALLDIR"
mkdir -p "$STAGINGDIR"

cd "$PKGDIR"
for URL in $SOURCES
do
	if [ ! -f $(basename $URL) ]
	then
		wget $URL
	fi
done

cd "$SRCDIR"
for PKG in $PKGDIR/*
do
	echo Extracting $(basename $PKG)
	tar -xf "$PKG"
done

echo "### Building binutils ###"
mkdir -p "$BUILDDIR/$BINUTILS"
cd "$BUILDDIR/$BINUTILS"

"$SRCDIR/$BINUTILS/configure" --prefix=/usr \
	--target=$TARGET \
	--disable-multilib \
	--with-cpu=$TARGET_CPU \
	--disable-nls

make -j$NPROC
make prefix="$INSTALLDIR/$BINUTILS/usr" install
rm -rf "$INSTALLDIR/$BINUTILS/usr/share"
rm "$INSTALLDIR/$BINUTILS/usr/lib/bfd-plugins/libdep.so"
cp -r "$INSTALLDIR/$BINUTILS/usr/" "$STAGINGDIR"
cp -r "$INSTALLDIR/$BINUTILS/usr/"* /usr/

echo "### Building $GCC bootstrap ###"

cd "$SRCDIR/$GCC"
ln -fs ../$MPFR mpfr
ln -fs ../$MPC mpc
ln -fs ../$GMP gmp

mkdir -p "$BUILDDIR/$GCC-bootstrap"
cd "$BUILDDIR/$GCC-bootstrap"

# These flags are required to build older versions of GCC
export CFLAGS="$CFLAGS -Wno-implicit-fallthrough -Wno-cast-function-type -fpermissive"
export CXXFLAGS="$CXXFLAGS -Wno-implicit-fallthrough -Wno-cast-function-type -fpermissive"
"$SRCDIR/$GCC/configure" --prefix=/usr \
	--target=$TARGET \
	--enable-languages="c" \
	--disable-multilib \
	--with-cpu=$TARGET_CPU \
	--with-system-zlib \
	--with-libgloss \
	--without-headers \
	--disable-shared \
	--disable-nls

make -j$NPROC all-gcc
make DESTDIR="$INSTALLDIR/$GCC-bootstrap" install-strip-gcc
rm -rf "$INSTALLDIR/$GCC-bootstrap/usr/share"
cp -r "$INSTALLDIR/$GCC-bootstrap/usr/"* /usr/

echo "### Building $NEWLIB ###"
mkdir -p "$BUILDDIR/$NEWLIB"
cd "$BUILDDIR/$NEWLIB"

export CFLAGS_FOR_TARGET="-Os -g -ffunction-sections -fdata-sections -fomit-frame-pointer -ffast-math"
"$SRCDIR/$NEWLIB/configure" --prefix=/usr \
	--target=$TARGET \
	--enable-languages="c" \
	--disable-newlib-supplied-syscalls \
	--disable-multilib \
	--with-cpu=$TARGET_CPU \
	--disable-nls

make -j$NPROC
DESTDIR=$INSTALLDIR/$NEWLIB make install
cp -r "$INSTALLDIR/$NEWLIB/usr/" "$STAGINGDIR"
cp -r "$INSTALLDIR/$NEWLIB/usr/"* /usr/
unset CFLAGS_FOR_TARGET

echo "### Building final $GCC ###"
mkdir -p "$BUILDDIR/$GCC"
cd "$BUILDDIR/$GCC"

"$SRCDIR/$GCC/configure" --prefix=/usr \
	--target=$TARGET \
	--enable-languages="c,c++" \
	--disable-multilib \
	--with-cpu=$TARGET_CPU \
	--with-system-zlib \
	--with-newlib \
	--with-libgloss \
	--disable-shared \
	--disable-nls

make -j$NPROC
make DESTDIR="$INSTALLDIR/$GCC" install-strip
rm -rf "$INSTALLDIR/$GCC/usr/share"
rm "$INSTALLDIR/$GCC/usr/lib/libcc1.so"
rm "$INSTALLDIR/$GCC/usr/lib/libcc1.so.0"
rm "$INSTALLDIR/$GCC/usr/lib/libcc1.so.0.0.0"

# Add a link to LTO plugin in the right location
mkdir -p "$INSTALLDIR/$GCC/usr/lib/bfd-plugins"
ln -s "/usr/libexec/gcc/m68k-elf/11.2.0/liblto_plugin.so" "$INSTALLDIR/$GCC/usr/lib/bfd-plugins/liblto_plugin.so"

cp -ar "$INSTALLDIR/$GCC/usr/" "$STAGINGDIR"
rm /usr/lib/bfd-plugins/liblto_plugin.so
cp -r "$INSTALLDIR/$GCC/usr/"* /usr/

echo "### DONE! ###"

