.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LTO-DUMP 1"
.TH LTO-DUMP 1 "2021-07-28" "gcc-11.2.0" "GNU"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
lto\-dump \- Tool for dumping LTO object files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
lto-dump [\fB\-list\fR]
     [\fB\-demangle\fR]
     [\fB\-defined\-only\fR]
     [\fB\-print\-value\fR]
     [\fB\-name\-sort\fR]
     [\fB\-size\-sort\fR]
     [\fB\-reverse\-sort\fR]
     [\fB\-no\-sort\fR]
     [\fB\-symbol=\fR]
     [\fB\-objects\fR]
     [\fB\-type\-stats\fR]
     [\fB\-tree\-stats\fR]
     [\fB\-gimple\-stats\fR]
     [\fB\-dump\-level=\fR]
     [\fB\-dump\-body=\fR]
     [\fB\-help\fR] \fIlto-dump\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBlto-dump\fR is a tool you can use in conjunction with \s-1GCC\s0 to
dump link time optimization object files.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-list\fR" 4
.IX Item "-list"
Dumps list of details of functions and variables.
.IP "\fB\-demangle\fR" 4
.IX Item "-demangle"
Dump the demangled output.
.IP "\fB\-defined\-only\fR" 4
.IX Item "-defined-only"
Dump only the defined symbols.
.IP "\fB\-print\-value\fR" 4
.IX Item "-print-value"
Dump initial values of the variables.
.IP "\fB\-name\-sort\fR" 4
.IX Item "-name-sort"
Sort the symbols alphabetically.
.IP "\fB\-size\-sort\fR" 4
.IX Item "-size-sort"
Sort the symbols according to size.
.IP "\fB\-reverse\-sort\fR" 4
.IX Item "-reverse-sort"
Dump the symbols in reverse order.
.IP "\fB\-no\-sort\fR" 4
.IX Item "-no-sort"
Dump the symbols in order of occurrence.
.IP "\fB\-symbol=\fR" 4
.IX Item "-symbol="
Dump the details of specific symbol.
.IP "\fB\-objects\fR" 4
.IX Item "-objects"
Dump the details of \s-1LTO\s0 objects.
.IP "\fB\-type\-stats\fR" 4
.IX Item "-type-stats"
Dump the statistics of tree types.
.IP "\fB\-tree\-stats\fR" 4
.IX Item "-tree-stats"
Dump the statistics of trees.
.IP "\fB\-gimple\-stats\fR" 4
.IX Item "-gimple-stats"
Dump the statistics of gimple statements.
.IP "\fB\-dump\-level=\fR" 4
.IX Item "-dump-level="
For deciding the optimization level of body.
.IP "\fB\-dump\-body=\fR" 4
.IX Item "-dump-body="
Dump the specific gimple body.
.IP "\fB\-help\fR" 4
.IX Item "-help"
Display the dump tool help.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017\-2021 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the \s-1GNU\s0 Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being \*(L"\s-1GNU\s0 General Public License\*(R" and \*(L"Funding
Free Software\*(R", the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the \fIgfdl\fR\|(7) man page.
.PP
(a) The \s-1FSF\s0's Front-Cover Text is:
.PP
.Vb 1
\&     A GNU Manual
.Ve
.PP
(b) The \s-1FSF\s0's Back-Cover Text is:
.PP
.Vb 3
\&     You have freedom to copy and modify this GNU Manual, like GNU
\&     software.  Copies published by the Free Software Foundation raise
\&     funds for GNU development.
.Ve
