This page will (At some point) cover all the tile functions in sgdk

==VDP_loadTileData==
VDP_loadTileData is a function to load a tile usually from a c array.
It is defined as:
{{{
VDP_loadTileData(const u32 *data, u16 index, u16 num, u8 use_dma);
}}}
Code example:
This code will display a 16 color reduced version of this image:<br>
http://imageshack.us/m/864/6267/p1010667fixed.png
<br>
To compile you will need to download P1010667_pal.h and P1010667_tile.h
http://www.mediafire.com/?aw8ygzkv4pceaqt
{{{
#include "genesis.h"
#include "P1010667_pal.h"
#include "P1010667_tile.h"
int main()
{
    //set up the screen
    VDP_setScreenWidth320();
    VDP_setHInterrupt(0);
    VDP_setHilightShadow(0);
    //Now display the picture
    	//load a pallete in the cram
	// arg0 the pallete line
	// arg1 the pallete data

    VDP_setPalette(PAL0, (const u16 *)P1010667_pal);

        // load tiles in VRAM
        //  arg0 = tiles data
        //  arg1 = The first tile that is gonna be loaded
        //  arg2 = number of tiles to load
        //  arg3 = use DMA (1) or not (0)
    VDP_loadTileData( (const u32 *)P1010667_tile, 1, 1120, 1);
    //Fill the screen with the proper tiles by incremeting by one each tile
    /*arg0 are we drawing on plane a or plane b defined as APLAN and BPLAN*/
    //arg1 start tile
    //arg2 x
    //arg3 y
    //arg4 width
    //arg5 height
    VDP_fillTileMapRectInc(APLAN, 1, 0, 0, 40, 28);

    while (1)
    {
     VDP_waitVSync();
    }
}
}}}
Once you have compiled the example you should get something like this:<br>
http://img813.imageshack.us/img813/8813/kegafusionpicture.png
==VDP_drawText==
Sgdk supports drawing text using the VDP_drawText function and it is very easy to use however because c puts a null terminator at the end of every char array you must have an odd number of characters so it is recommended that you use a character counter like the one found here: http://www.javascriptkit.com/script/script2/charcount.shtml
the reason for this is because the code needed to be even aligned
so I am going to modify my last example to include text
since VDP_drawText draws on the a plane I will change it so that the tiles are draw on the b plane so change
{{{
VDP_fillTileMapRectInc(APLAN, 1, 0, 0, 40, 28);
}}}
to
{{{
VDP_fillTileMapRectInc(BPLAN, 1, 0, 0, 40, 28);
}}}
and before
{{{
VDP_fillTileMapRectInc(BPLAN, 1, 0, 0, 40, 28);
}}}
add
{{{
VDP_drawText("the text ",0,0);
}}}
notice how I used a space after "the text" this is because "the text" has an even amount of characters
once you build it you should get something like this<br>
http://s7.postimage.org/94wn40o61/the_text.png
the text displayed but it was hard to see so how do we change that brings us to the next part of the tutorial
==VDP_setTextPalette==
so right now we have 4 palette lines to chose from (0-3) so which one will show up on a blue background the best well here are our current choices:<br>
http://s18.postimage.org/euxvh8lc7/color_choices.png
the text will be draw using the last color in the row so I think that the bright green will show up best and that is on row 2 (counting from zero) so before
{{{
VDP_drawText("the text ",0,0);
}}}
I will add
{{{
VDP_setTextPalette(2);
}}}
I ended up with<br>
http://s14.postimage.org/hueff7qhr/green_text.png